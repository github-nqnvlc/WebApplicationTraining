@model WebApplicationTraining.ViewModels.TrainerCourseViewModel
@{
    ViewBag.Title = "Create Assign Trainer To Course";
}

<h2>Create Assign Trainer To Course</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Assign Trainer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TrainerCourse.Trainer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.TrainerCourse.TrainerId, new SelectList(Model.Trainers, "Id", "UserName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrainerCourse.TrainerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainerCourse.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.TrainerCourse.CourseId, new SelectList(Model.Courses, "Id", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrainerCourse.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Assign" class="btn btn-default" />
            </div>
        </div>
    </div>
 }
